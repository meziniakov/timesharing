import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import * as faces from 'facesjs'
import Script from 'next/script'
import { useEffect } from 'react'
import Nav from '../components/Header/Nav'
import MentorCard from '../components/screen/MentorList/MentorCard'

export default function Home({ data }) {
  // const { data, error } = useSWR(
  //   getUrl(params, query),
  //   fetcher
  //   // , {initialData: events}
  // )

  // if (error) return <div>Failed to load</div>
  // if (!data) return <div>Loading...</div>
  // if (data.status == 'error')
  //   return (
  //     <>
  //       <div>{data.message}</div>
  //     </>
  //   )
  // useEffect(() => {
  //   // const face1 = faces.generate(null, { race: 'white', fatness: 7 })
  //   // const face2 = faces.generate(null, { race: 'white', fatness: 7 })
  //   // faces.display('my-div-id', face1, { race: 'black' })
  //   // faces.display('my-div-id2', face2, { race: 'black' })
  //   //
  // }, [])
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Nav />
      <main className={styles.main}>
        {Array.isArray(data) ? (
          <div className="flex flex-wrap -mx-3">
            {data.map((mentor, i) => (
              <MentorCard key={i} mentor={mentor} />
            ))}
          </div>
        ) : (
          <div className="flex flex-wrap -mx-3">
            {/* <MentorCard key={i} mentor={mentor} /> */}
          </div>
        )}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export async function getServerSideProps() {
  const res = await fetch(`http://127.0.0.1:3000/api/mentor`)
  const { data } = await res.json()
  return { props: { data } }
}
